var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _viewJs = require("./View.js");
var _viewJsDefault = parcelHelpers.interopDefault(_viewJs);
var _iconsSvg = require("url:../../img/icons.svg");
var _iconsSvgDefault = parcelHelpers.interopDefault(_iconsSvg);
class PaginationView extends _viewJsDefault.default {
    _parentElement = document.querySelector('.pagination');
    addHandlerClick(handler) {
        this._parentElement.addEventListener('click', (e)=>{
            const btn = e.target.closest('.btn--inline'); //Searches up the tree (looks for closest parent)
            console.log(btn);
            handler();
        });
    }
    _generateMarkup() {
        const numPages = Math.ceil(this._data.results.length / this._data.resultsPerPage); //Number of results / 10 to get how many pages there are
        const currentPage = this._data.page;
        // on first page and there are other pages
        if (currentPage === 1 && numPages > 1) return `<button class="btn--inline pagination__btn--next">\n                        <span>Page ${currentPage + 1}</span>\n                        <svg class="search__icon">\n                            <use href="${_iconsSvgDefault.default}#icon-arrow-right"></use>\n                        </svg>\n                    </button>`;
        //On last page
        if (currentPage === numPages && numPages > 1) return `<button class="btn--inline pagination__btn--prev">\n                        <svg class="search__icon">\n                            <use href="${_iconsSvgDefault.default}#icon-arrow-left"></use>\n                        </svg>\n                        <span>Page ${currentPage - 1}</span>\n                    </button>`;
        //on a page with others still to come
        if (currentPage < numPages) return `<button class="btn--inline pagination__btn--prev">\n                        <svg class="search__icon">\n                            <use href="${_iconsSvgDefault.default}#icon-arrow-left"></use>\n                        </svg>\n                        <span>Page 1</span>\n                    </button>\n                    <button class="btn--inline pagination__btn--next">\n                        <span>Page 3</span>\n                        <svg class="search__icon">\n                            <use href="src/img/icons.svg#icon-arrow-right"></use>\n                        </svg>\n                    </button>`;
        //else on page 1 and there are no other pages
        return;
    }
}
exports.default = new PaginationView();
