var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _modelJs = require("./model.js");
var _recipeView = require("./views/recipeView");
var _recipeViewDefault = parcelHelpers.interopDefault(_recipeView);
var _stable = require("core-js/stable");
var _runtime = require("regenerator-runtime/runtime");
const recipeContainer = document.querySelector(".recipe");
const timeout = function(s) {
    return new Promise(function(_, reject) {
        setTimeout(function() {
            reject(new Error(`Request took too long! Timeout after ${s} second`));
        }, s * 1000);
    });
};
// https://forkify-api.herokuapp.com/v2
///////////////////////////////////////
const controlRecipes = async ()=>{
    try {
        const id = window.location.hash.slice(1); //get hash from current url (removing '#' from start)
        if (!id) return;
        //1 Loading recipe
        renderSpinner(recipeContainer); //add spinner whilst loading data
        await _modelJs.loadRecipe(id);
        //2 Rendering recipe
        _recipeViewDefault.default.render(_modelJs.state.recipe);
    } catch (err) {
        console.log(err);
        alert(err); //Catches the error thrown in the try block
    }
};
//Get new recipe if the page hash changes and initially on page load
[
    'hashchange',
    'load'
].forEach((e)=>window.addEventListener(e, controlRecipes)
); // window.addEventListener('hashchange', controlRecipes)
 // window.addEventListener('load', controlRecipes) //event fires as soon as page has finished loading
